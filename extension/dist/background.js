(()=>{var e={150:function(e,s){var r,a;"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,void 0===(a="function"==typeof(r=function(e){"use strict";if("undefined"==typeof browser||Object.getPrototypeOf(browser)!==Object.prototype){const s="The message port closed before a response was received.",r="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",a=e=>{const a={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(0===Object.keys(a).length)throw new Error("api-metadata.json has not been included in browser-polyfill");class n extends WeakMap{constructor(e,s){super(s),this.createItem=e}get(e){return this.has(e)||this.set(e,this.createItem(e)),super.get(e)}}const g=(s,r)=>(...a)=>{e.runtime.lastError?s.reject(new Error(e.runtime.lastError.message)):r.singleCallbackArg||a.length<=1&&!1!==r.singleCallbackArg?s.resolve(a[0]):s.resolve(a)},t=e=>1==e?"argument":"arguments",m=(e,s,r)=>new Proxy(s,{apply:(s,a,n)=>r.call(a,e,...n)});let o=Function.call.bind(Object.prototype.hasOwnProperty);const i=(e,s={},r={})=>{let a=Object.create(null),n={has:(s,r)=>r in e||r in a,get(n,A,l){if(A in a)return a[A];if(!(A in e))return;let c=e[A];if("function"==typeof c)if("function"==typeof s[A])c=m(e,e[A],s[A]);else if(o(r,A)){let s=((e,s)=>function(r,...a){if(a.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${t(s.minArgs)} for ${e}(), got ${a.length}`);if(a.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${t(s.maxArgs)} for ${e}(), got ${a.length}`);return new Promise(((n,t)=>{if(s.fallbackToNoCallback)try{r[e](...a,g({resolve:n,reject:t},s))}catch(g){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,g),r[e](...a),s.fallbackToNoCallback=!1,s.noCallback=!0,n()}else s.noCallback?(r[e](...a),n()):r[e](...a,g({resolve:n,reject:t},s))}))})(A,r[A]);c=m(e,e[A],s)}else c=c.bind(e);else if("object"==typeof c&&null!==c&&(o(s,A)||o(r,A)))c=i(c,s[A],r[A]);else{if(!o(r,"*"))return Object.defineProperty(a,A,{configurable:!0,enumerable:!0,get:()=>e[A],set(s){e[A]=s}}),c;c=i(c,s[A],r["*"])}return a[A]=c,c},set:(s,r,n,g)=>(r in a?a[r]=n:e[r]=n,!0),defineProperty:(e,s,r)=>Reflect.defineProperty(a,s,r),deleteProperty:(e,s)=>Reflect.deleteProperty(a,s)},A=Object.create(e);return new Proxy(A,n)},A=e=>({addListener(s,r,...a){s.addListener(e.get(r),...a)},hasListener:(s,r)=>s.hasListener(e.get(r)),removeListener(s,r){s.removeListener(e.get(r))}}),l=new n((e=>"function"!=typeof e?e:function(s){const r=i(s,{},{getContent:{minArgs:0,maxArgs:0}});e(r)}));let c=!1;const x=new n((e=>"function"!=typeof e?e:function(s,a,n){let g,t,m=!1,o=new Promise((e=>{g=function(s){c||(console.warn(r,(new Error).stack),c=!0),m=!0,e(s)}}));try{t=e(s,a,g)}catch(e){t=Promise.reject(e)}const i=!0!==t&&((A=t)&&"object"==typeof A&&"function"==typeof A.then);var A;if(!0!==t&&!i&&!m)return!1;return(i?t:o).then((e=>{n(e)}),(e=>{let s;s=e&&(e instanceof Error||"string"==typeof e.message)?e.message:"An unexpected error occurred",n({__mozWebExtensionPolyfillReject__:!0,message:s})})).catch((e=>{console.error("Failed to send onMessage rejected reply",e)})),!0})),d=({reject:r,resolve:a},n)=>{e.runtime.lastError?e.runtime.lastError.message===s?a():r(new Error(e.runtime.lastError.message)):n&&n.__mozWebExtensionPolyfillReject__?r(new Error(n.message)):a(n)},u=(e,s,r,...a)=>{if(a.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${t(s.minArgs)} for ${e}(), got ${a.length}`);if(a.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${t(s.maxArgs)} for ${e}(), got ${a.length}`);return new Promise(((e,s)=>{const n=d.bind(null,{resolve:e,reject:s});a.push(n),r.sendMessage(...a)}))},b={devtools:{network:{onRequestFinished:A(l)}},runtime:{onMessage:A(x),onMessageExternal:A(x),sendMessage:u.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:u.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},p={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return a.privacy={network:{"*":p},services:{"*":p},websites:{"*":p}},i(e,b,a)};if("object"!=typeof chrome||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");e.exports=a(chrome)}else e.exports=browser})?r.apply(s,[e]):r)||(e.exports=a)}},s={};function r(a){var n=s[a];if(void 0!==n)return n.exports;var g=s[a]={exports:{}};return e[a].call(g.exports,g,g.exports,r),g.exports}(()=>{"use strict";const e=[{name:"LinkedIn",match:"/linkedin",url:"https://www.linkedin.com/",cookies:[{name:"li_at",domain:".www.linkedin.com"}]}],s=["localhost"];var a=r(150);const n=async(e,s)=>{console.log("-> sendMessage",e,s),await a.tabs.sendMessage(e,s)};a.runtime.onMessage.addListener((async(s,r)=>{try{console.log("*** *** onMessage *** **"),s.getCookies&&r.tab?await(async(s,r,g)=>{if(console.log("-> getCookies"),g.id)if(r)await n(g.id,{cookies:{websiteName:s,cookies:[],newSession:r}});else{const r=(s=>{const r=e.filter((e=>e.name===s));return 1===r.length?r[0]:null})(s)?.cookies;if(r){const e=await a.cookies.getAll({});console.log("-> getCookies cookies",e);const t=r.map((s=>e.filter((e=>e.name===s.name&&e.domain===s.domain))[0]));await n(g.id,{cookies:{websiteName:s,cookies:t}})}}})(s.getCookies.websiteName,s.getCookies.newSession,r.tab):console.info("unknown msg type")}catch(e){console.error(e)}})),a.tabs.onUpdated.addListener((async(e,r,a)=>{console.log("browser.tabs.onUpdated.addListener"),console.log("-> extensionWebsiteDomains",s),a.url&&s.some((e=>a.url&&a.url.includes(e)))&&"complete"===r.status&&await n(e,{restart:!0})})),a.runtime.onInstalled.addListener((async()=>{console.log("browser.runtime.onInstalled.addListener");const e=await a.tabs.query({url:s.map((e=>`*://*.${e}/*`))});for(const s of e)s.id&&(console.log("isChrome"),-1!==document.location.protocol.indexOf("chrome")?await a.tabs.reload(s.id):await n(s.id,{restart:!0}))})),a.runtime.onMessage.addListener((async(e,s)=>{console.log("-> Message received",e,s),e.newTab&&s.tab||e.getCookies&&s.tab||e.notif||e.restartMe&&s.tab&&s.tab.id&&await n(s.tab.id,{restart:!0})}))})()})();